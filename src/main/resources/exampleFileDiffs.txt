[
  {
    "sha": "63c58e23590b6fc11d93d5bff72e04f02d7bc143",
    "filename": "src/main/kotlin/pl/pietrzak/Application.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/makogra/PRHelperServer/blob/d321d7207a4633aa00e16c123c7288db6e3a3480/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2FApplication.kt",
    "raw_url": "https://github.com/makogra/PRHelperServer/raw/d321d7207a4633aa00e16c123c7288db6e3a3480/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2FApplication.kt",
    "contents_url": "https://api.github.com/repos/makogra/PRHelperServer/contents/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2FApplication.kt?ref=d321d7207a4633aa00e16c123c7288db6e3a3480",
    "patch": "@@ -37,8 +37,8 @@ fun main2() {\n }\n \n fun Application.mainModule() {\n-    val clientId = System.getenv(\"GITHUB_CLIENT_ID\") ?: error(\"GITHUB_CLIENT_ID not set\")\n-    val clientSecret = System.getenv(\"GITHUB_CLIENT_SECRET\") ?: error(\"GITHUB_CLIENT_SECRET not set\")\n+    val clientId = System.getenv(\"GITHUB_CLIENT_ID\") ?: \"\"//error(\"GITHUB_CLIENT_ID not set\")\n+    val clientSecret = System.getenv(\"GITHUB_CLIENT_SECRET\") ?: \"\"//error(\"GITHUB_CLIENT_SECRET not set\")\n \n     install(CallLogging) {\n         level = Level.INFO"
  },
  {
    "sha": "24c618d076b314e633a2df733dd7ed19df226045",
    "filename": "src/main/kotlin/pl/pietrzak/webhook/GitHubWebhookRoutes.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/makogra/PRHelperServer/blob/d321d7207a4633aa00e16c123c7288db6e3a3480/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2Fwebhook%2FGitHubWebhookRoutes.kt",
    "raw_url": "https://github.com/makogra/PRHelperServer/raw/d321d7207a4633aa00e16c123c7288db6e3a3480/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2Fwebhook%2FGitHubWebhookRoutes.kt",
    "contents_url": "https://api.github.com/repos/makogra/PRHelperServer/contents/src%2Fmain%2Fkotlin%2Fpl%2Fpietrzak%2Fwebhook%2FGitHubWebhookRoutes.kt?ref=d321d7207a4633aa00e16c123c7288db6e3a3480",
    "patch": "@@ -24,7 +24,7 @@ fun Routing.githubWebhookRoute() {\n         if (event != \"pull_request\") return@post call.respond(HttpStatusCode.OK)\n \n         val payload = call.receiveText()\n-        println(\"payload\")\n+        println(\"payload : $payload\")\n         val json = Json.decodeFromString<GitHubPullRequestPayload>(payload)\n \n         if (json.action == \"opened\" || json.action == \"synchronize\") {"
  }
]